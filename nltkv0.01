import nltk.classify.util
from nltk.classify import NaiveBayesClassifier
nltk.download('punkt')
from nltk.tokenize import word_tokenize
from collections import Counter
from nltk.corpus import names
from nltk.corpus import movie_reviews

def readwords( filename ):
    f = open(filename)
    words = [ line.rstrip() for line in f.readlines()]
    return words

def readreviews( filename ):
    f = open(filename)
    words = [ line.rstrip() for line in f.readlines()]
    return words



def word_feats(words):
    return dict([(word, True) for word in words])
positive_vocab = readwords("positive.txt")
negative_vocab = readwords("negative.txt")
neutral_vocab = readwords("neutral.txt")

positive_features = [(word_feats(pos), 'pos') for pos in positive_vocab]
negative_features = [(word_feats(neg), 'neg') for neg in negative_vocab]
neutral_features = [(word_feats(neu), 'neu') for neu in neutral_vocab]

train_set = negative_features + positive_features + neutral_features
classifier = NaiveBayesClassifier.train(train_set)

neg = 0
pos = 0

for filename in os.listdir(path):
    with open(os.path.join(path,filename)) as myfile:
    result = myfile.read()
    words = word_tokenize(result)
    for word in words:

        classResult = classifier.classify(word_feats(word))
        if classResult == 'neg':
            neg = neg + 1
        if classResult == 'pos':
            pos = pos + 1

print('Positive: ' + str(float(pos) / len(words)))
print('Negative: ' + str(float(neg) / len(words)))

for i in words:
    file = open("all_words.txt", "a")
    file.write(i + "\n")
    print(i)
    file.close()
